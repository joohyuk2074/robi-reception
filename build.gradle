plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'org.asciidoctor.jvm.convert'

    group = 'me.weekbelt'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        asciidoctorExt
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        runtimeOnly 'mysql:mysql-connector-java'

        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // ascii doc
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    test {
        outputs.dir snippetsDir
    }

    asciidoctor {
        inputs.dir snippetsDir
        configurations 'asciidoctorExt'
        dependsOn test
    }


    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar {
        dependsOn asciidoctor
        from ("${asciidoctor.outputDir}/html5") {
            into 'static/docs'
        }
    }
}

bootJar { enabled = false }

project(':module-app:br') {
    dependencies {
        implementation project(':module-directory')
    }
}